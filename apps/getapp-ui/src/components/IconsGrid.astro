---
type IconFile = {
  default: string;
};

function isIconFile(icon: IconFile | string): icon is IconFile {
  return (icon as IconFile).default !== undefined;
}

interface Props {
  icons: Array<IconFile | string>;
}

function getIconName(icon: IconFile | string) {
  if (isIconFile(icon)) {
    const splitName = icon.default.split("/");
    return `icon-${splitName[splitName.length - 1].split(".")[0]}`;
  }
  return `icon-${icon}`;
}

const { icons } = Astro.props;

const removePublic = (path: string) => path.replace("/public", "");
---

<ul
  class="grid-box u-margin-block-start-24"
  style="--grid-gap:1rem; --grid-item-size:8rem; --grid-item-size-small-screens:6rem;"
>
  {
    icons?.map((icon) => {
      const name = getIconName(icon);
      return (
        <li class="grid-box-item u-cursor-pointer icons" data-icon={name}>
          <div class="card u-flex u-flex-vertical u-cross-center u-width-full-line">
            {isIconFile(icon) ? (
              <img src={removePublic(icon.default)} alt={name} />
            ) : (
              <span class={name} />
            )}
            <div class="copy-overlay" />
          </div>
          <div class="u-flex u-main-center u-width-full-line u-margin-block-start-4">
            <code>{name}</code>
          </div>
        </li>
      );
    })
  }
</ul>

<script>
  const icons = document.querySelectorAll(".icons");
  icons.forEach((icon) => {
    icon?.addEventListener("click", () => {
      const iconName = icon.getAttribute("data-icon") || "";
      navigator.clipboard.writeText(iconName);
      icon.setAttribute("data-copied", "");

      setTimeout(() => {
        icon.removeAttribute("data-copied");
      }, 2000);
    });
  });
</script>

<style>
  .card {
    position: relative;
    overflow: hidden;
    box-shadow: none;
  }

  .copy-overlay {
    --bg-clr: hsl(var(--color-neutral-10) / 90%);
    --clr: hsl(var(--color-neutral-80));
  }

  :global(.theme-dark) .copy-overlay {
    --bg-clr: hsl(var(--color-neutral-105) / 90%);
    --clr: white;
  }

  .card .copy-overlay {
    position: absolute;
    inset: 0;
    background-color: var(--bg-clr);
    opacity: 0;
    pointer-events: none;
    transition: 150ms ease;
  }

  .card:hover .copy-overlay {
    opacity: 1;
  }

  .card .copy-overlay::after {
    content: "Copy";
    position: absolute;
    inset: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    color: var(--clr);
    font-weight: bold;
  }

  [data-copied] .copy-overlay::after {
    content: "Copied!";
  }
</style>
